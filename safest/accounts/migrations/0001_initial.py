# Generated by Django 4.0.4 on 2022-04-19 15:11

from django.db import migrations, models
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('gender', models.CharField(choices=[('Male', 'Masculin'), ('Female', 'Feminin')], max_length=140, null=True)),
                ('nom', models.CharField(blank=True, max_length=500)),
                ('prenom', models.CharField(blank=True, max_length=500)),
                ('password', models.CharField(default='safe.student', editable=False, max_length=500)),
                ('tel', models.BigIntegerField(unique=True)),
                ('pays_code', models.IntegerField(blank=True)),
                ('tel_verified', models.BooleanField(blank=True, default=False)),
                ('profile_details', models.BooleanField(blank=True, default=False)),
                ('profile_steps', models.BooleanField(blank=True, default=False)),
                ('pays_origine', models.CharField(blank=True, max_length=500)),
                ('ville', models.CharField(blank=True, max_length=500)),
                ('code_postal', models.IntegerField(blank=True, default=0)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('langues', models.CharField(blank=True, max_length=500)),
                ('interets', models.CharField(blank=True, max_length=500)),
                ('accepte', models.CharField(blank=True, max_length=500)),
                ('refuse', models.CharField(blank=True, max_length=500)),
                ('foyer_activites', models.CharField(blank=True, max_length=500)),
                ('specialite', models.CharField(blank=True, max_length=500)),
                ('est_occupant', models.BooleanField(blank=True, default=True)),
                ('role', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('Staff', 'Staff')], default='Staff', max_length=40)),
                ('conservatrice', models.BooleanField(blank=True, default=True)),
                ('introvertie', models.BooleanField(blank=True, default=True)),
                ('alcoolique', models.BooleanField(blank=True, default=False)),
                ('accepte_animal', models.BooleanField(blank=True, default=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/photos')),
                ('image_b64', models.BinaryField(blank=True, null=True)),
                ('autre_details', models.TextField(blank=True)),
                ('date_joindre', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
